name: Windows Release

on:
  push:
    tags:
      - "v*" # Trigger workflow on version tags like v1.0, v2.0, etc.
  workflow_dispatch: # Allows manually running the workflow from the GitHub Actions tab.
    inputs:
      tag_name:
        description: "Tag to create a release from"
        required: true
        default: "v1.0.0"

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: x86_64-pc-windows-msvc

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.8"

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip

      # Build the Rust binary for Windows in release mode
      - name: Build release binary
        run: cargo build --release --target x86_64-pc-windows-msvc

      # Test
      - name: Run tests
        run: cargo test --release

      - name: Upload build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: rust-python-windows
          path: target/x86_64-pc-windows-msvc/release/rust-python.exe

  release:
    needs: build
    runs-on: ubuntu-latest # Use Linux for the GitHub release steps

    steps:
      - name: Download release binary
        uses: actions/download-artifact@v3
        with:
          name: rust-python-windows

      # Create a release and upload the binary
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.event.inputs.tag_name }}
          release_name: Release ${{ github.event.inputs.tag_name }}
          files: rust-python.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
