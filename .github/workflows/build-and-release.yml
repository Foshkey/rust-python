name: Build and Release

on:
  push:
    tags:
      - "v*"
  workflow_dispatch: # Allows manually running the workflow from the GitHub Actions tab.
    inputs:
      tag_name:
        description: "Tag to create a release from"
        required: true
        default: "v1.0.0"

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.10"] # Adjust Python versions as needed

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set exe extension on Windows
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          echo "EXE_EXT=.exe" >> $env:GITHUB_ENV

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install PyInstaller
        run: pip install pyinstaller

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Build Rust project
        run: cargo build --release

      - name: Collect build artifacts
        run: |
          mkdir artifacts
          cp target/release/python_app${{ env.EXE_EXT }} artifacts/
          cp target/release/rust-python${{ env.EXE_EXT }} artifacts/
          zip -r artifacts/${{ matrix.os }}.zip artifacts/

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.os }}-binaries
          path: ${{ matrix.os }}.zip

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download Linux artifacts
        uses: actions/download-artifact@v3
        with:
          name: ubuntu-latest-binaries

      - name: Download Windows artifacts
        uses: actions/download-artifact@v3
        with:
          name: windows-latest-binaries

      - name: Download MacOS artifacts
        uses: actions/download-artifact@v3
        with:
          name: macos-latest-binaries

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.event.inputs.tag_name }}
          release_name: Release ${{ github.event.inputs.tag_name }}
          files: ./artifacts/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
